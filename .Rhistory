install.packages("KnitR")
install.packages("knitr")
install.packages("knitr")
remotes::install_github('yihui/knitr')
remotes::install_github('rmarkdown')
install.packages("rmarkdown")
install.packages("rmarkdown")
## LOAD PACKAGES ####
library(dplyr) # this is a package that makes handling data easier
library(ggplot2) # this is a package that makes nice graphs
## LOAD IN DATA ####
dialect_data = read.csv("HSS8005_dialectdata.csv")
table(dialect_data$foot_strut)
table(dialect_data$foot_strut, dialect_data$age_group)
foot_strut.tab
foot_strut.tab = table(dialect_data$foot_strut, dialect_data$age_group)
foot_strut.tab
prop.table(foot_strut.tab, 2)
foot_strut.prop.tab = prop.table(foot_strut.tab, 2)
# WRONG WAY AROUND
prop.table(foot_strut.tab, 1)
dialect_data %>%
group_by(age_group) %>% # the independent variable
count(foot_strut) %>% # the dependent variable
mutate(prop = prop.table(n))
# here you can look at another independent variable's affect on foot_strut
barplot(foot_strut.tab)
#create a barplot with the proportions of foot_strut instead of raw numbers
levels(dialect_data$age_group)
# reordering
dialect_data$age_group_ordered = factor(dialect_data$age_group,levels(dialect_data$age_group)[c(3, 1, 2)])
#having a look at new order
levels(dialect_data$age_group_ordered)
ggplot(dialect_data, aes(age_group_ordered, fill = foot_strut)) +
geom_bar(position="fill")
ggplot(dialect_data, aes(age_group_ordered, fill = foot_strut)) +
geom_bar(position="fill") +
xlab("age group")
ggplot(dialect_data, aes(age_group_ordered, fill = foot_strut)) +
geom_bar(position="fill") +
xlab("age group") +
theme(legend.position = "bottom")
ggplot(dialect_data, aes(age_group_ordered, fill = foot_strut)) +
geom_bar(position="fill") +
xlab("age group") +
theme(legend.position = "bottom") +
scale_fill_manual(values = c("red", "yellow"))
#my ggplot with new colours
ggplot(dialect_data, aes(age_group_ordered, fill = foot_strut)) +
geom_bar(position="fill") +
scale_fill_brewer(palette="Set1")
